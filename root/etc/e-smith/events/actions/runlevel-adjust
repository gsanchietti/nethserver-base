#!/usr/bin/perl

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use NethServer::Service;
use NethServer::TrackerClient;

my $event = shift || die("Missing event argument!");
my $confDb = esmith::ConfigDB->open_ro();
my $trackerClient = NethServer::TrackerClient->new();
my @services = map { $_->key } $confDb->get_all_by_prop('type' => 'service');
my %tasks = ();
my $errors = 0;

# Close STDIN to get rid of console escapes in
# init scripts.  See /etc/sysconfig/init and /etc/init.d/functions
close(STDIN);

foreach (@services) {
    $tasks{$_} = $trackerClient->declare_task("Adjust service $_");
}

foreach (@services) {
    my $errorMessage = "success";
    my $adj = NethServer::Service->new($_, $confDb)->adjust();    
    if( ! $adj) {
	$errorMessage = "failed";
	$errors++;
    }
    $trackerClient->set_task_done($tasks{$_}, $errorMessage, $adj ? 0 : 1);
}

exit($errors > 0 ? 1 : 0);
